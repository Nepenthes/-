C51 COMPILER V9.54   USERMAIN                                                              03/08/2018 16:33:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE USERMAIN
OBJECT MODULE PLACED IN .\Objects\UserMain.obj
COMPILER INVOKED BY: D:\Keil\Software\C51\BIN\C51.EXE User\UserMain.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\faultSet;.
                    -\User;.\Hardware;.\StdPeriph_Driver) DEBUG PRINT(.\Listings\UserMain.lst) OBJECT(.\Objects\UserMain.obj)

line level    source

   1          #include <Includes.H>
   2          
   3          u8 BD_addr,BD_type;     //设故板主板地址及类型
   4          
   5          void mainFunActive(void){
   6   1      #if(DEBUG == ENABLE)
   7   1      const u8 LOGSIZE = 60;
   8   1      xdata   u8 Disp_log[60] = {0};
   9   1      xdata   u8 temp_log[10] = {0};
  10   1      xdata   u8 loop;
  11   1      #endif
  12   1      
  13   1      #if(FUN_BOOTUP == MODE_A)               //启动行为：正常启动
  14   1              static u8 relayControlDats[RELAYDATS_SIZE];
  15   1      #if(RELAYDATS_CORRECT == 1)
  16   1              u8 temp[RELAYDATS_SIZE];
  17   1      #endif
  18   1              BD_addr = Localaddr_get();              //读地址
  19   1              BD_type = LocalBDType_get();    //读类型
  20   1      
  21   1              memset(Disp_log,0,LOGSIZE * sizeof(u8));
  22   1              sprintf(Disp_log,"设故板参数已读取");
  23   1              Debug_log(Disp_log);
  24   1      
  25   1              Beep_time(200,100);             //开机提示
  26   1              Beep_time(200,100);
  27   1              
  28   1              while(1){
  29   2                      
  30   2                      frameInsAccept();               //数据验收
  31   2              
  32   2                      if(!memcmp(relayControlDats,COREDATS,RELAYDATS_SIZE)){  //是否为新数据
  33   3                      
  34   3                              memcpy(relayControlDats,COREDATS,RELAYDATS_SIZE);       //更新数据
  35   3      
  36   3                              switch(BD_type){
  37   4                              
  38   4                                      case BOARD_typeA:               
  39   4      #if(RELAYDATS_CORRECT == 1)             //是否需要进行倒序更正
  40   4                                                              BytesReverse(relayControlDats,temp,RELAYDATS_SIZE);     
  41   4                                                              Frame595Send(temp,RELAYDATS_SIZE);              //设故板执行倒序更正后的更新数据
  42   4      #endif                  
  43   4                                                              Frame595Send(relayControlDats,RELAYDATS_SIZE);  //设故板执行更新数据
  44   4      #if(DEBUG == ENABLE)
  45   4                                                              memset(Disp_log,0,LOGSIZE * sizeof(u8));
  46   4                                                              sprintf(Disp_log,"设故板数据已更新：");
  47   4                                                              for(loop = 0;loop < RELAYDATS_SIZE;loop ++){
  48   5                                                                      
  49   5                                                                      sprintf(temp_log,"%02X",relayControlDats[loop]);
  50   5                                                                      strcat(Disp_log,temp_log);
  51   5                                                              }
  52   4                                                              Debug_log(Disp_log);
  53   4      #endif
  54   4                                                              Beep_time(80,40);               //更新提示
C51 COMPILER V9.54   USERMAIN                                                              03/08/2018 16:33:07 PAGE 2   

  55   4                                                              Beep_time(80,40);
  56   4                                                              
  57   4                                                              Frame595Clr(RELAYDATS_SIZE);    //设故板数据清除
  58   4                                                              break;
  59   4                                                              
  60   4                                      case BOARD_typeB:       break;
  61   4      
  62   4                                      case BOARD_typeC:       break;
  63   4                                                              
  64   4                                                              default: break;
  65   4                              }
  66   3                      }
  67   2              }
  68   1      #elif(FUN_BOOTUP == MODE_B)     //启动行为：写入设故板类型
                      u8 relayBoradType = BOARD_TYPE;
                      
                      EEPROM_SectorErase(0);
                      delay_ms(20);
                      EEPROM_write_n(0,&relayBoradType,1);
                      delay_ms(20);
                      
                      Beep_time(200,100);             //类型更新提示
                      Beep_time(200,100);
              #endif
  79   1      }
  80          
  81          int main(void){
  82   1              
  83   1              Bsp_Init();
  84   1              
  85   1              mainFunActive();
  86   1              
  87   1              return 0;
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    340    ----
   CONSTANT SIZE    =    109    ----
   XDATA SIZE       =   ----      71
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
