C51 COMPILER V9.54   EEPROM                                                                12/06/2017 14:19:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\list\EEPROM.obj
COMPILER INVOKED BY: D:\Keil\Software\C51\BIN\C51.EXE EEPROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\
                    -EEPROM.lst) TABS(3) OBJECT(.\list\EEPROM.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          // 本程序是STC系列的内置EEPROM读写程序。
  16          
  17          #include "config.h"
  18          #include "eeprom.h"
  19          
  20          
  21          //========================================================================
  22          // 函数: void  ISP_Disable(void)
  23          // 描述: 禁止访问ISP/IAP.
  24          // 参数: non.
  25          // 返回: non.
  26          // 版本: V1.0, 2012-10-22
  27          //========================================================================
  28          void  DisableEEPROM(void)
  29          {
  30   1         ISP_CONTR = 0;       //禁止ISP/IAP操作
  31   1         ISP_CMD   = 0;       //去除ISP/IAP命令
  32   1         ISP_TRIG  = 0;       //防止ISP/IAP命令误触发
  33   1         ISP_ADDRH = 0xff;    //清0地址高字节
  34   1         ISP_ADDRL = 0xff;    //清0地址低字节，指向非EEPROM区，防止误操作
  35   1      }
  36          
  37          //========================================================================
  38          // 函数: void EEPROM_read_n(u16 EE_address,u8 *DataAddress,u16 number)
  39          // 描述: 从指定EEPROM首地址读出n个字节放指定的缓冲.
  40          // 参数: EE_address:  读出EEPROM的首地址.
  41          //       DataAddress: 读出数据放缓冲的首地址.
  42          //       number:      读出的字节长度.
  43          // 返回: non.
  44          // 版本: V1.0, 2012-10-22
  45          //========================================================================
  46          
  47          void EEPROM_read_n(u16 EE_address,u8 *DataAddress,u16 number)
  48          {
  49   1         EA = 0;     //禁止中断
  50   1         ISP_CONTR = (ISP_EN + ISP_WAIT_FREQUENCY);   //设置等待时间，允许ISP/IAP操作，送一次就够
  51   1         do
  52   1         {
  53   2            ISP_READ();                   //读命令
  54   2            ISP_ADDRH = EE_address / 256;    //送地址高字节（地址需要改变时才需重新送地址）
C51 COMPILER V9.54   EEPROM                                                                12/06/2017 14:19:22 PAGE 2   

  55   2            ISP_ADDRL = EE_address % 256;    //送地址低字节
  56   2            ISP_TRIG();                   //先送5AH，再送A5H到ISP/IAP触发寄存器，每次都需要如此
  57   2                                       //送完A5H后，ISP/IAP命令立即被触发启动
  58   2                                       //CPU等待IAP完成后，才会继续执行程序。
  59   2            _nop_();
  60   2            *DataAddress = ISP_DATA;         //读出的数据送往
  61   2            EE_address++;
  62   2            DataAddress++;
  63   2         }while(--number);
  64   1      
  65   1         DisableEEPROM();
  66   1         EA = 1;     //重新允许中断
  67   1      }
  68          
  69          
  70          /******************** 扇区擦除函数 *****************/
  71          //========================================================================
  72          // 函数: void EEPROM_SectorErase(u16 EE_address)
  73          // 描述: 把指定地址的EEPROM扇区擦除.
  74          // 参数: EE_address:  要擦除的扇区EEPROM的地址.
  75          // 返回: non.
  76          // 版本: V1.0, 2013-5-10
  77          //========================================================================
  78          void EEPROM_SectorErase(u16 EE_address)
  79          {
  80   1         EA = 0;     //禁止中断
  81   1                                       //只有扇区擦除，没有字节擦除，512字节/扇区。
  82   1                                       //扇区中任意一个字节地址都是扇区地址。
  83   1         ISP_ADDRH = EE_address / 256;       //送扇区地址高字节（地址需要改变时才需重新送地址）
  84   1         ISP_ADDRL = EE_address % 256;       //送扇区地址低字节
  85   1         ISP_CONTR = (ISP_EN + ISP_WAIT_FREQUENCY);   //设置等待时间，允许ISP/IAP操作，送一次就够
  86   1         ISP_ERASE();                     //送扇区擦除命令
  87   1         ISP_TRIG();
  88   1         _nop_();
  89   1         DisableEEPROM();
  90   1         EA = 1;     //重新允许中断
  91   1      }
  92          
  93          //========================================================================
  94          // 函数: void EEPROM_write_n(u16 EE_address,u8 *DataAddress,u16 number)
  95          // 描述: 把缓冲的n个字节写入指定首地址的EEPROM.
  96          // 参数: EE_address:  写入EEPROM的首地址.
  97          //       DataAddress: 写入源数据的缓冲的首地址.
  98          //       number:      写入的字节长度.
  99          // 返回: non.
 100          // 版本: V1.0, 2012-10-22
 101          //========================================================================
 102          void EEPROM_write_n(u16 EE_address,u8 *DataAddress,u16 number)
 103          {
 104   1         EA = 0;     //禁止中断
 105   1      
 106   1         ISP_CONTR = (ISP_EN + ISP_WAIT_FREQUENCY);   //设置等待时间，允许ISP/IAP操作，送一次就够
 107   1         do
 108   1         {
 109   2            ISP_WRITE();                  //写命令
 110   2            ISP_ADDRH = EE_address / 256;    //送地址高字节（地址需要改变时才需重新送地址）
 111   2            ISP_ADDRL = EE_address % 256;    //送地址低字节
 112   2            ISP_DATA  = *DataAddress;        //送数据到ISP_DATA，只有数据改变时才需重新送
 113   2            ISP_TRIG();
 114   2            _nop_();
 115   2            EE_address++;
 116   2            DataAddress++;
C51 COMPILER V9.54   EEPROM                                                                12/06/2017 14:19:22 PAGE 3   

 117   2         }while(--number);
 118   1      
 119   1         DisableEEPROM();
 120   1         EA = 1;     //重新允许中断
 121   1      }
 122          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
